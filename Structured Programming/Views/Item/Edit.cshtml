@model Structured_Programming.Models.ItemFormModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>
    <div style="float: right">
        @Helpers.ImageFor(Model.Item.ItemId, "300px", "300px");
    </div>
    @using (Html.BeginForm("Edit","Item", FormMethod.Post, new { enctype = "multipart/form-data" })) {
        @Html.ValidationSummary(true)
        <fieldset>
            <legend>Item</legend>

            @Html.HiddenFor(model => model.Item.ItemId)
            @Html.HiddenFor(model => model.Item.UserId)
            <div class="editor-label">
                <label for="Item_TypeId">Type</label>
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.Item.TypeId, Model.TypeList)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Item.Name)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Item.Name)
                @Html.ValidationMessageFor(model => model.Item.Name)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Item.Description)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Item.Description)
                @Html.ValidationMessageFor(model => model.Item.Description)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Item.Price)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Item.Price)
                @Html.ValidationMessageFor(model => model.Item.Price)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Image)
                @Html.ValidationMessageFor(m => m.Image)
                <input name="image" id="image" type="file" />
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Item.Trade)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Item.Trade)
                @Html.ValidationMessageFor(model => model.Item.Trade)
            </div>
            <p>
                <input type="submit" value="Save" />
            </p>
        </fieldset>
    }
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
