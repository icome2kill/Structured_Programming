@helper ImageFor(int id, string width, string height)
{
    var imagePath = "/Images/";
    string image = imagePath + "no-available-image.png";
    string[] images = Directory.GetFiles(Server.MapPath(imagePath), id + ".*", SearchOption.TopDirectoryOnly);
    if (images.Length > 0)
    {
        image = imagePath + System.IO.Path.GetFileName(images[0]);
    }
    <img src="@image" style="width:@width; height:@height" />
}
@helper ImageFor(int id)
{
    var imagePath = "/Images/";
    string image = imagePath + "no-available-image.png";
    string[] images = Directory.GetFiles(Server.MapPath(imagePath), id + ".*", SearchOption.TopDirectoryOnly);
    if (images.Length > 0)
    {
        image = imagePath + System.IO.Path.GetFileName(images[0]);
    }
    <img src="@image" />
}
<!-- Highlight all occurrent string in a given text. -->
@helper Highlight(string source, string strToHighlight, bool option)
{
    var newText = source;
    if (option)
    {
        if (strToHighlight != null)
        {
            newText = source.Replace(strToHighlight , "<span style=\"background-color: red\">" + strToHighlight + "</span>");
        }
    }
    if (newText != null)
    {
        @(new HtmlString(newText));
    }
}
@helper ShortenText(string source, int length) {
    string result = source;
    if (source.Length > length) {
        result = source.Substring(0, length - 3) + "...";
    }
    @(new HtmlString(result));
}
